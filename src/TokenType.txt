// Token Type defenitions
//
// Creating an enum like this so the enum identifier can be printed out, 
// instead of just the integer associated with it

// 12 separator tokens
TOKENTYPE_DEF(SEPARATOR_HASH) // #
TOKENTYPE_DEF(SEPARATOR_OPEN_PARENTHESIS) // (
TOKENTYPE_DEF(SEPARATOR_CLOSE_PARENTHESIS) // )
TOKENTYPE_DEF(SEPARATOR_OPEN_CURLY_BRACKET) // {
TOKENTYPE_DEF(SEPARATOR_CLOSE_CURLY_BRACKET) // }
TOKENTYPE_DEF(SEPARATOR_OPEN_SQUARE_BRACKET) // [
TOKENTYPE_DEF(SEPARATOR_CLOSE_SQUARE_BRACKET) // ]
TOKENTYPE_DEF(SEPARATOR_SEMI_COLON) // ;
TOKENTYPE_DEF(SEPARATOR_ARROW_LEFT) // <
TOKENTYPE_DEF(SEPARATOR_ARROW_RIGHT) // >
TOKENTYPE_DEF(SEPARATOR_COMMA) // ,
TOKENTYPE_DEF(SEPARATOR_QUOTE) // "

// 31 keyword tokens
TOKENTYPE_DEF(KEYWORD_AUTO)
TOKENTYPE_DEF(KEYWORD_DOUBLE)
TOKENTYPE_DEF(KEYWORD_INT)
TOKENTYPE_DEF(KEYWORD_STRUCT)
TOKENTYPE_DEF(KEYWORD_BREAK)
TOKENTYPE_DEF(KEYWORD_ELSE)
TOKENTYPE_DEF(KEYWORD_LONGSWITCH)
TOKENTYPE_DEF(KEYWORD_CASE)
TOKENTYPE_DEF(KEYWORD_ENUM)
TOKENTYPE_DEF(KEYWORD_REGISTER)
TOKENTYPE_DEF(KEYWORD_TYPEDEF)
TOKENTYPE_DEF(KEYWORD_CHAR)
TOKENTYPE_DEF(KEYWORD_EXTERN)
TOKENTYPE_DEF(KEYWORD_RETURN)
TOKENTYPE_DEF(KEYWORD_UNION)
TOKENTYPE_DEF(KEYWORD_CONTINUE)
TOKENTYPE_DEF(KEYWORD_FOR)
TOKENTYPE_DEF(KEYWORD_SIGNED)
TOKENTYPE_DEF(KEYWORD_VOID)
TOKENTYPE_DEF(KEYWORD_DO)
TOKENTYPE_DEF(KEYWORD_IF)
TOKENTYPE_DEF(KEYWORD_STATIC)
TOKENTYPE_DEF(KEYWORD_WHILE)
TOKENTYPE_DEF(KEYWORD_DEFAULT)
TOKENTYPE_DEF(KEYWORD_GOTO)
TOKENTYPE_DEF(KEYWORD_SIZEOF)
TOKENTYPE_DEF(KEYWORD_VOLATILE)
TOKENTYPE_DEF(KEYWORD_CONST)
TOKENTYPE_DEF(KEYWORD_FLOAT)
TOKENTYPE_DEF(KEYWORD_SHORT)
TOKENTYPE_DEF(KEYWORD_UNSIGNED)

TOKENTYPE_DEF(OPERATOR)
TOKENTYPE_DEF(IDENTIFIER) 
TOKENTYPE_DEF(COMMENT)

// 4 constant tokens
TOKENTYPE_DEF(CONSTANT_STRING)
TOKENTYPE_DEF(CONSTANAT_INTEGER)
TOKENTYPE_DEF(CONSTANT_BOOLEAN)
TOKENTYPE_DEF(CONSTANT_CHAR)


TOKENTYPE_DEF(NO_TOKEN)
